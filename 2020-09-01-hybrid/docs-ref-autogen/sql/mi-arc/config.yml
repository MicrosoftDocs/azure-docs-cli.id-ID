### YamlMime:AzureCLIGroup
uid: az_sql_mi-arc_config
name: az sql mi-arc config
extensionInformation: >-
  > [!Note]

  > Referensi ini adalah bagian dari ekstensi **arcdata** untuk Azure CLI (versi 2.3.1 atau yang lebih tinggi).  Ekstensi akan secara otomatis menginstal pertama kali Anda menjalankan perintah **az sql mi-arc config** .  [Pelajari lebih lanjut](https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-overview) tentang ekstensi.
summary: Perintah konfigurasi.
description: ''
directCommands:
- uid: az_sql_mi-arc_config_add
  name: az sql mi-arc config add
  summary: Tambahkan nilai untuk jalur json dalam file konfigurasi.
  description: Tambahkan nilai di jalur json di file konfigurasi.  Semua contoh di bawah ini diberikan di Bash.  Jika menggunakan baris perintah lain, Anda mungkin perlu menghindari kutipan dengan tepat.  Atau, Anda dapat menggunakan fungsionalitas file patch.
  syntax: >-
    az sql mi-arc config add --json-values
                             --path
  examples:
  - summary: Contoh 1 - Menambahkan penyimpanan.
    syntax: az sql mi-arc config add --path custom/spec.json --json-values 'spec.storage={"accessMode":"ReadWriteOnce","className":"managed-premium","size":"10Gi"}'
  requiredParameters:
  - isRequired: true
    name: --json-values -j
    summary: "Daftar pasangan nilai kunci jalur json ke nilai: `key1.subkey1=value1,key2.subkey2=value2`. Anda dapat memberikan nilai json sebaris seperti: `key='{\"kind\":\"cluster\",\"name\":\"test-cluster\"}'` atau menyediakan jalur file, seperti `key=./values.json`. Perintah tambahkan TIDAK mendukung kondisional. Jika nilai sebaris yang Anda berikan adalah pasangan nilai kunci itu sendiri dan `=` `,`  silakan keluar dari karakter tersebut. Misalnya: `key1=\"key2=val2,key3=val3\"`. Silakan lihat http://jsonpatch.com/ untuk contoh tampilan jalur Anda. Jika Anda ingin mengakses array, Anda harus melakukannya dengan menunjukkan indeks, seperti `key.0=value`."
    description: ''
  - isRequired: true
    name: --path -p
    summary: Jalur ke spesifikasi sumber daya kustom, yaitu custom/spec.json.
    description: ''
- uid: az_sql_mi-arc_config_init
  name: az sql mi-arc config init
  summary: Menginisialisasi CRD dan file spesifikasi untuk SQL Managed Instance.
  description: ''
  syntax: az sql mi-arc config init --path
  examples:
  - summary: Menginisialisasi CRD dan file spesifikasi untuk SQL Managed Instance.
    syntax: az sql mi-arc config init --path ./template
  requiredParameters:
  - isRequired: true
    name: --path -p
    summary: Jalur tempat spesifikasi lengkap untuk SQL Managed Instance harus ditulis.
    description: ''
- uid: az_sql_mi-arc_config_patch
  name: az sql mi-arc config patch
  summary: Patch file konfigurasi berdasarkan file patch json.
  description: Patch file konfigurasi sesuai dengan file patch yang diberikan. Konsultasikan http://jsonpatch.com/ untuk pemahaman yang lebih baik tentang bagaimana jalur harus disusun. Operasi penggantian dapat menggunakan kondisional di jalurnya karena pustaka jsonpath https://jsonpath.com/. Semua file patch json harus dimulai dengan kunci `patch` yang memiliki array patch dengan operasi yang sesuai (tambah, ganti, hapus), jalur, dan nilai. Operasi `remove` tidak memerlukan nilai, hanya jalur. Lihat contoh di bawah.
  syntax: >-
    az sql mi-arc config patch --patch-file
                               --path
  examples:
  - summary: Contoh 1 - Mengganti port satu titik akhir dengan file patch.
    syntax: >-
      az sql mi-arc config patch --path custom/spec.json --patch ./patch.json

          Patch File Example (patch.json):
              {"patch":[{"op":"replace","path":"$.spec.endpoints[?(@.name=='Controller')].port","value":30080}]}
  - summary: Contoh 2 - Mengganti penyimpanan dengan file patch.
    syntax: >-
      az sql mi-arc config patch --path custom/spec.json --patch ./patch.json

          Patch File Example (patch.json):
              {"patch":[{"op":"replace","path":".spec.storage","value":{"accessMode":"ReadWriteMany","className":"managed-premium","size":"10Gi"}}]}
  requiredParameters:
  - isRequired: true
    name: --patch-file
    summary: 'Jalur ke file json patch yang didasarkan pada pustaka jsonpatch: http://jsonpatch.com/. Anda harus memulai file json patch Anda dengan kunci yang disebut `patch`, yang nilainya adalah array operasi patch yang ingin Anda buat. Untuk jalur operasi patch, Anda dapat menggunakan notasi titik, seperti `key1.key2` untuk sebagian besar operasi. Jika Anda ingin melakukan operasi penggantian, dan Anda mengganti nilai dalam array yang memerlukan kondisional, gunakan notasi jsonpath dengan memulai jalur Anda dengan $. Ini akan memungkinkan Anda untuk melakukan kondisi seperti `$.key1.key2[?(@.key3=="someValue"].key4`. Lihat contoh di bawah ini. Untuk bantuan tambahan terkait kondisional, lihat: https://jsonpath.com/.'
    description: ''
  - isRequired: true
    name: --path -p
    summary: Jalur ke spesifikasi sumber daya kustom, yaitu `custom/spec.json`.
    description: ''
- uid: az_sql_mi-arc_config_remove
  name: az sql mi-arc config remove
  summary: Hapus nilai untuk jalur json dalam file konfigurasi.
  description: Hapus nilai di jalur json di file konfigurasi. Semua contoh di bawah ini diberikan di Bash. Jika menggunakan baris perintah lain, Anda mungkin perlu menghindari kutipan dengan tepat. Atau, Anda dapat menggunakan fungsionalitas file patch.
  syntax: >-
    az sql mi-arc config remove --json-path
                                --path
  examples:
  - summary: Contoh 1 - Menghapus penyimpanan.
    syntax: az sql mi-arc config remove --path custom/spec.json --json-path '.spec.storage'
  requiredParameters:
  - isRequired: true
    name: --json-path -j
    summary: 'Daftar jalur json berdasarkan pustaka jsonpatch yang menunjukkan nilai mana yang ingin Anda hapus, seperti: `key1.subkey1,key2.subkey2`. Perintah hapus TIDAK mendukung kondisional. Silakan lihat http://jsonpatch.com/ untuk contoh tampilan jalur Anda.  Jika Anda ingin mengakses array, Anda harus melakukannya dengan menunjukkan indeks, seperti `key.0=value`.'
    description: ''
  - isRequired: true
    name: --path -p
    summary: Jalur ke spesifikasi sumber daya kustom, yaitu `custom/spec.json`.
    description: ''
- uid: az_sql_mi-arc_config_replace
  name: az sql mi-arc config replace
  summary: Ganti nilai untuk jalur json dalam file konfigurasi.
  description: Ganti nilai di jalur json di file konfigurasi.  Semua contoh di bawah ini diberikan di Bash.  Jika menggunakan baris perintah lain, Anda mungkin perlu menghindari kutipan dengan tepat.  Atau, Anda dapat menggunakan fungsionalitas file patch.
  syntax: >-
    az sql mi-arc config replace --json-values
                                 --path
  examples:
  - summary: Contoh 1 - Mengganti port titik akhir tunggal.
    syntax: az sql mi-arc config replace --path custom/spec.json --json-values '$.spec.endpoints[?(@.name=="Controller")].port=30080'
  - summary: Contoh 2 - Mengganti penyimpanan.
    syntax: az sql mi-arc config replace --path custom/spec.json --json-values 'spec.storage={"accessMode":"ReadWriteOnce","className":"managed-premium","size":"10Gi"}'
  requiredParameters:
  - isRequired: true
    name: --json-values -j
    summary: 'Daftar pasangan nilai kunci jalur json ke nilai: `key1.subkey1=value1,key2.subkey2=value2`. Anda dapat memberikan nilai json sebaris seperti: `key={"kind":"cluster","name":"test-cluster"}` atau menyediakan jalur file, seperti `key=./values.json`. Perintah ganti mendukung kondisional melalui pustaka jsonpath. Untuk menggunakan ini, mulai jalur Anda dengan $. Ini akan memungkinkan Anda untuk melakukan kondisi seperti `-j $.key1.key2[?(@.key3=="someValue"].key4=value`. Jika nilai sebaris yang Anda berikan adalah pasangan nilai kunci itu sendiri dan `=` `,` silakan keluar dari karakter tersebut. Contohnya,`key1="key2=val2,key3=val3"`. Anda dapat melihat contoh di bawah ini. Untuk bantuan tambahan, lihat: https://jsonpath.com/.'
    description: ''
  - isRequired: true
    name: --path -p
    summary: Jalur ke spesifikasi sumber daya kustom, yaitu `custom/spec.json`.
    description: ''
commands:
- az_sql_mi-arc_config_add
- az_sql_mi-arc_config_init
- az_sql_mi-arc_config_patch
- az_sql_mi-arc_config_remove
- az_sql_mi-arc_config_replace
globalParameters:
- name: --debug
  summary: Meningkatkan verbositas pengelogan untuk menampilkan semua log debug.
- name: --help -h
  summary: Menampilkan pesan bantuan ini dan keluar.
- name: --only-show-errors
  summary: Hanya menampilkan kesalahan, menyembunyikan peringatan.
- name: --output -o
  defaultValue: json
  parameterValueGroup: json, jsonc, table, tsv
  summary: Format output.
- name: --query
  summary: String kueri JMESPath. Lihat <a href="http://jmespath.org/">http://jmespath.org/</a> untuk informasi yang lebih lengkap beserta contohnya.
- name: --subscription
  summary: Nama atau ID langganan. Anda dapat mengonfigurasi langganan default menggunakan `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: Meningkatkan verbositas pengelogan. Gunakan --debug untuk log waktu lengkap.
metadata:
  description: Perintah konfigurasi.
  ms.openlocfilehash: afd8294a09e98e3b22e72660ebcbdaf87902de0a
  ms.sourcegitcommit: 458438e54726db3a020b476922b529b514b512d8
  ms.translationtype: MT
  ms.contentlocale: id-ID
  ms.lasthandoff: 05/11/2022
  ms.locfileid: "144929340"
